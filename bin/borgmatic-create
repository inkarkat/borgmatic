#!/bin/bash
set -o pipefail

: ${BORGMATIC_CREATE_SOURCE_DIRSPEC=}
: ${BORGMATIC_CREATE_EXECUTIONMARKER_BASEDIR=}
: ${BORGMATIC_SUBJECT=}
: ${BORGMATIC_WHAT=}

if [ -n "$BORGMATIC_SUBJECT" ]; then
    marker()
    {
	executionMarker ${BORGMATIC_CREATE_EXECUTIONMARKER_BASEDIR:+--basedir "$BORGMATIC_CREATE_EXECUTIONMARKER_BASEDIR"} --group "${BORGMATIC_SUBJECT:?}-backup" "$@"
    }

    notify()
    {
	userNotify --title "${BORGMATIC_WHAT:-${BORGMATIC_SUBJECT:?}} backup" "$@"
    }
else
    marker() { :; }
    notify() { :; }
fi

# Log the full verbose backup creation output into a timestamped log file.
readonly LOG_DIRSPEC="/var/log/${USER}/borgmatic"
[ -d "$LOG_DIRSPEC" ] || mkdir --parents -- "$LOG_DIRSPEC" || { printf >&2 'ERROR: Could not initialize log directory at %s\n' "$LOG_DIRSPEC"; exit 3; }
# Disable color output for logging and sampleLines.
set -- --no-color "$@"

if [ -n "$BORGMATIC_CREATE_SOURCE_DIRSPEC" ]; then
    # With this setting, the backup configuration can specify source paths relative
    # to the configured directory. We need to be in that directory for that to work.
    cd "$BORGMATIC_CREATE_SOURCE_DIRSPEC" || exit 3
fi

marker --update lastBackup

# Enable output verbosity for backup creation to list each backed up file.
if borgmatic create --verbosity 1 --files "$@" \
    | borgmatic-creationLogger "${LOG_DIRSPEC}/${BORGMATIC_SUBJECT}${BORGMATIC_SUBJECT:+-}"
then
    marker --update lastGoodBackup --increment-context

    currentBackupDuration="$(marker --diff lastBackup --format '%P')"
    notify --timeout 10 -- "Backup finished${currentBackupDuration:+; took }${currentBackupDuration}."
    exit 0
else
    status=$?
    currentBackupDuration="$(marker --diff lastBackup --format '%P')"
    notify -- "Backup failed${currentBackupDuration:+ after }${currentBackupDuration}."
    exit $status
fi
