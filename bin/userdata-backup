#!/bin/bash

readonly scriptDir="$([ "${BASH_SOURCE[0]}" ] && dirname -- "${BASH_SOURCE[0]}" || exit 3)"
[ -d "$scriptDir" ] || { echo >&2 'ERROR: Cannot determine script directory!'; exit 3; }
readonly projectDir="${scriptDir}/.."
readonly etcDir="${projectDir}/etc/"
readonly borgmaticConfigTemplateFilespec="${etcDir}/config.yaml.shelltemplate"
readonly borgmaticConfigFilespec=~/.config/borgmatic/config.yaml

printUsage()
{
    cat <<HELPTEXT
Create a backup / execute backup action for all user data [of the passed USER].
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--for USER] [BORGMATIC-ACTIONS: init|prune|create|check|extract|list|info ...] [-n|--dry-run] [BORGMATIC-OPTIONS ...] [-?|-h|--help]'
}

typeset -a borgmaticArgs=()
typeset -a borgmaticDryRunArg=()
typeset -a borgmaticActions=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--for)		shift; targetUser="${1:?}"; shift; exec sudoWithUnixhome --set-home --user "$targetUser" "${BASH_SOURCE[0]}" "${borgmaticActions[@]}" "${borgmaticDryRunArg[@]}" "${borgmaticArgs[@]}" "$@";;
	init|prune|create|check|extract|list|info)
			borgmaticActions+=("$1"); shift;;
	--dry-run|-n)	borgmaticDryRunArg+=("$1"); shift;;
	--)		borgmaticArgs+=("$1"); shift; break;;
	*)		borgmaticArgs+=("$1"); shift;;
    esac
done
if [ $# -eq 0 ] && { [ ${#borgmaticActions[@]} -eq 0 ] || contains 'create' "${borgmaticActions[@]}"; }; then
    # Default output verbosity for backup creation.
    set -- --verbosity 1 --files
fi

if [ "$borgmaticConfigTemplateFilespec" -nt "$borgmaticConfigFilespec" ]; then
    touch-p --no-create --no-update -- "$borgmaticConfigFilespec" || exit 3
    shelltemplate -- "$borgmaticConfigTemplateFilespec" "$borgmaticConfigFilespec" || exit 3
fi

exec borgmatic "${borgmaticActions[@]}" "${borgmaticDryRunArg[@]}" "${borgmaticArgs[@]}" "$@"
